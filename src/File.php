<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Unified\Unified_to;

class File 
{

	private SDKConfiguration $sdkConfiguration;

	/**
	 * @param SDKConfiguration $sdkConfig
	 */
	public function __construct(SDKConfiguration $sdkConfig)
	{
		$this->sdkConfiguration = $sdkConfig;
	}
	
    /**
     * Remove a file
     * 
     * @param \Unified\Unified_to\Models\Operations\DeleteCrmConnectionIdFileIdRequest $request
     * @param \Unified\Unified_to\Models\Operations\DeleteCrmConnectionIdFileIdSecurity $security
     * @return \Unified\Unified_to\Models\Operations\DeleteCrmConnectionIdFileIdResponse
     */
	public function deleteCrmConnectionIdFileId(
        ?\Unified\Unified_to\Models\Operations\DeleteCrmConnectionIdFileIdRequest $request,
        \Unified\Unified_to\Models\Operations\DeleteCrmConnectionIdFileIdSecurity $security,
    ): \Unified\Unified_to\Models\Operations\DeleteCrmConnectionIdFileIdResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/crm/{connection_id}/file/{id}', \Unified\Unified_to\Models\Operations\DeleteCrmConnectionIdFileIdRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = sprintf('speakeasy-sdk/%s %s %s %s', $this->sdkConfiguration->language, $this->sdkConfiguration->sdkVersion, $this->sdkConfiguration->genVersion, $this->sdkConfiguration->openapiDocVersion);
        
        $client = Utils\Utils::configureSecurityClient($this->sdkConfiguration->defaultClient, $security);
        $httpResponse = $client->request('DELETE', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \Unified\Unified_to\Models\Operations\DeleteCrmConnectionIdFileIdResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if (true) { /** @phpstan-ignore-line */
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $response->deleteCrmConnectionIdFileIdDefaultApplicationJSONString = $httpResponse->getBody()->getContents();
            }
        }

        return $response;
    }
	
    /**
     * List all files
     * 
     * @param \Unified\Unified_to\Models\Operations\GetCrmConnectionIdFileRequest $request
     * @param \Unified\Unified_to\Models\Operations\GetCrmConnectionIdFileSecurity $security
     * @return \Unified\Unified_to\Models\Operations\GetCrmConnectionIdFileResponse
     */
	public function getCrmConnectionIdFile(
        ?\Unified\Unified_to\Models\Operations\GetCrmConnectionIdFileRequest $request,
        \Unified\Unified_to\Models\Operations\GetCrmConnectionIdFileSecurity $security,
    ): \Unified\Unified_to\Models\Operations\GetCrmConnectionIdFileResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/crm/{connection_id}/file', \Unified\Unified_to\Models\Operations\GetCrmConnectionIdFileRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\Unified\Unified_to\Models\Operations\GetCrmConnectionIdFileRequest::class, $request, null));
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = sprintf('speakeasy-sdk/%s %s %s %s', $this->sdkConfiguration->language, $this->sdkConfiguration->sdkVersion, $this->sdkConfiguration->genVersion, $this->sdkConfiguration->openapiDocVersion);
        
        $client = Utils\Utils::configureSecurityClient($this->sdkConfiguration->defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \Unified\Unified_to\Models\Operations\GetCrmConnectionIdFileResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->crmFiles = $serializer->deserialize((string)$httpResponse->getBody(), 'array<Unified\Unified_to\Models\Shared\CrmFile>', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Retrieve a file
     * 
     * @param \Unified\Unified_to\Models\Operations\GetCrmConnectionIdFileIdRequest $request
     * @param \Unified\Unified_to\Models\Operations\GetCrmConnectionIdFileIdSecurity $security
     * @return \Unified\Unified_to\Models\Operations\GetCrmConnectionIdFileIdResponse
     */
	public function getCrmConnectionIdFileId(
        ?\Unified\Unified_to\Models\Operations\GetCrmConnectionIdFileIdRequest $request,
        \Unified\Unified_to\Models\Operations\GetCrmConnectionIdFileIdSecurity $security,
    ): \Unified\Unified_to\Models\Operations\GetCrmConnectionIdFileIdResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/crm/{connection_id}/file/{id}', \Unified\Unified_to\Models\Operations\GetCrmConnectionIdFileIdRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = sprintf('speakeasy-sdk/%s %s %s %s', $this->sdkConfiguration->language, $this->sdkConfiguration->sdkVersion, $this->sdkConfiguration->genVersion, $this->sdkConfiguration->openapiDocVersion);
        
        $client = Utils\Utils::configureSecurityClient($this->sdkConfiguration->defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \Unified\Unified_to\Models\Operations\GetCrmConnectionIdFileIdResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->crmFile = $serializer->deserialize((string)$httpResponse->getBody(), 'Unified\Unified_to\Models\Shared\CrmFile', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Update a file
     * 
     * @param \Unified\Unified_to\Models\Operations\PatchCrmConnectionIdFileIdRequest $request
     * @param \Unified\Unified_to\Models\Operations\PatchCrmConnectionIdFileIdSecurity $security
     * @return \Unified\Unified_to\Models\Operations\PatchCrmConnectionIdFileIdResponse
     */
	public function patchCrmConnectionIdFileId(
        ?\Unified\Unified_to\Models\Operations\PatchCrmConnectionIdFileIdRequest $request,
        \Unified\Unified_to\Models\Operations\PatchCrmConnectionIdFileIdSecurity $security,
    ): \Unified\Unified_to\Models\Operations\PatchCrmConnectionIdFileIdResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/crm/{connection_id}/file/{id}', \Unified\Unified_to\Models\Operations\PatchCrmConnectionIdFileIdRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "crmFile", "json");
        if ($body !== null) {
            $options = array_merge_recursive($options, $body);
        }
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = sprintf('speakeasy-sdk/%s %s %s %s', $this->sdkConfiguration->language, $this->sdkConfiguration->sdkVersion, $this->sdkConfiguration->genVersion, $this->sdkConfiguration->openapiDocVersion);
        
        $client = Utils\Utils::configureSecurityClient($this->sdkConfiguration->defaultClient, $security);
        $httpResponse = $client->request('PATCH', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \Unified\Unified_to\Models\Operations\PatchCrmConnectionIdFileIdResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->crmFile = $serializer->deserialize((string)$httpResponse->getBody(), 'Unified\Unified_to\Models\Shared\CrmFile', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Create a file
     * 
     * @param \Unified\Unified_to\Models\Operations\PostCrmConnectionIdFileRequest $request
     * @param \Unified\Unified_to\Models\Operations\PostCrmConnectionIdFileSecurity $security
     * @return \Unified\Unified_to\Models\Operations\PostCrmConnectionIdFileResponse
     */
	public function postCrmConnectionIdFile(
        ?\Unified\Unified_to\Models\Operations\PostCrmConnectionIdFileRequest $request,
        \Unified\Unified_to\Models\Operations\PostCrmConnectionIdFileSecurity $security,
    ): \Unified\Unified_to\Models\Operations\PostCrmConnectionIdFileResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/crm/{connection_id}/file', \Unified\Unified_to\Models\Operations\PostCrmConnectionIdFileRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "crmFile", "json");
        if ($body !== null) {
            $options = array_merge_recursive($options, $body);
        }
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = sprintf('speakeasy-sdk/%s %s %s %s', $this->sdkConfiguration->language, $this->sdkConfiguration->sdkVersion, $this->sdkConfiguration->genVersion, $this->sdkConfiguration->openapiDocVersion);
        
        $client = Utils\Utils::configureSecurityClient($this->sdkConfiguration->defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \Unified\Unified_to\Models\Operations\PostCrmConnectionIdFileResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->crmFile = $serializer->deserialize((string)$httpResponse->getBody(), 'Unified\Unified_to\Models\Shared\CrmFile', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Update a file
     * 
     * @param \Unified\Unified_to\Models\Operations\PutCrmConnectionIdFileIdRequest $request
     * @param \Unified\Unified_to\Models\Operations\PutCrmConnectionIdFileIdSecurity $security
     * @return \Unified\Unified_to\Models\Operations\PutCrmConnectionIdFileIdResponse
     */
	public function putCrmConnectionIdFileId(
        ?\Unified\Unified_to\Models\Operations\PutCrmConnectionIdFileIdRequest $request,
        \Unified\Unified_to\Models\Operations\PutCrmConnectionIdFileIdSecurity $security,
    ): \Unified\Unified_to\Models\Operations\PutCrmConnectionIdFileIdResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/crm/{connection_id}/file/{id}', \Unified\Unified_to\Models\Operations\PutCrmConnectionIdFileIdRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "crmFile", "json");
        if ($body !== null) {
            $options = array_merge_recursive($options, $body);
        }
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = sprintf('speakeasy-sdk/%s %s %s %s', $this->sdkConfiguration->language, $this->sdkConfiguration->sdkVersion, $this->sdkConfiguration->genVersion, $this->sdkConfiguration->openapiDocVersion);
        
        $client = Utils\Utils::configureSecurityClient($this->sdkConfiguration->defaultClient, $security);
        $httpResponse = $client->request('PUT', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \Unified\Unified_to\Models\Operations\PutCrmConnectionIdFileIdResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->crmFile = $serializer->deserialize((string)$httpResponse->getBody(), 'Unified\Unified_to\Models\Shared\CrmFile', 'json');
            }
        }

        return $response;
    }
}