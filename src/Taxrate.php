<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Unified\Unified_to;

class Taxrate 
{

	private SDKConfiguration $sdkConfiguration;

	/**
	 * @param SDKConfiguration $sdkConfig
	 */
	public function __construct(SDKConfiguration $sdkConfig)
	{
		$this->sdkConfiguration = $sdkConfig;
	}
	
    /**
     * Create a taxrate
     * 
     * @param \Unified\Unified_to\Models\Operations\CreateAccountingTaxrateRequest $request
     * @param \Unified\Unified_to\Models\Operations\CreateAccountingTaxrateSecurity $security
     * @return \Unified\Unified_to\Models\Operations\CreateAccountingTaxrateResponse
     */
	public function createAccountingTaxrate(
        ?\Unified\Unified_to\Models\Operations\CreateAccountingTaxrateRequest $request,
        \Unified\Unified_to\Models\Operations\CreateAccountingTaxrateSecurity $security,
    ): \Unified\Unified_to\Models\Operations\CreateAccountingTaxrateResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/accounting/{connection_id}/taxrate', \Unified\Unified_to\Models\Operations\CreateAccountingTaxrateRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "accountingTaxrate", "json");
        if ($body !== null) {
            $options = array_merge_recursive($options, $body);
        }
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = $this->sdkConfiguration->userAgent;
        
        $client = Utils\Utils::configureSecurityClient($this->sdkConfiguration->defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $statusCode = $httpResponse->getStatusCode();

        $response = new \Unified\Unified_to\Models\Operations\CreateAccountingTaxrateResponse();
        $response->statusCode = $statusCode;
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->accountingTaxrate = $serializer->deserialize((string)$httpResponse->getBody(), 'Unified\Unified_to\Models\Shared\AccountingTaxrate', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Retrieve a taxrate
     * 
     * @param \Unified\Unified_to\Models\Operations\GetAccountingTaxrateRequest $request
     * @param \Unified\Unified_to\Models\Operations\GetAccountingTaxrateSecurity $security
     * @return \Unified\Unified_to\Models\Operations\GetAccountingTaxrateResponse
     */
	public function getAccountingTaxrate(
        ?\Unified\Unified_to\Models\Operations\GetAccountingTaxrateRequest $request,
        \Unified\Unified_to\Models\Operations\GetAccountingTaxrateSecurity $security,
    ): \Unified\Unified_to\Models\Operations\GetAccountingTaxrateResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/accounting/{connection_id}/taxrate/{id}', \Unified\Unified_to\Models\Operations\GetAccountingTaxrateRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\Unified\Unified_to\Models\Operations\GetAccountingTaxrateRequest::class, $request, null));
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = $this->sdkConfiguration->userAgent;
        
        $client = Utils\Utils::configureSecurityClient($this->sdkConfiguration->defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $statusCode = $httpResponse->getStatusCode();

        $response = new \Unified\Unified_to\Models\Operations\GetAccountingTaxrateResponse();
        $response->statusCode = $statusCode;
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->accountingTaxrate = $serializer->deserialize((string)$httpResponse->getBody(), 'Unified\Unified_to\Models\Shared\AccountingTaxrate', 'json');
            }
        }

        return $response;
    }
	
    /**
     * List all taxrates
     * 
     * @param \Unified\Unified_to\Models\Operations\ListAccountingTaxratesRequest $request
     * @param \Unified\Unified_to\Models\Operations\ListAccountingTaxratesSecurity $security
     * @return \Unified\Unified_to\Models\Operations\ListAccountingTaxratesResponse
     */
	public function listAccountingTaxrates(
        ?\Unified\Unified_to\Models\Operations\ListAccountingTaxratesRequest $request,
        \Unified\Unified_to\Models\Operations\ListAccountingTaxratesSecurity $security,
    ): \Unified\Unified_to\Models\Operations\ListAccountingTaxratesResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/accounting/{connection_id}/taxrate', \Unified\Unified_to\Models\Operations\ListAccountingTaxratesRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\Unified\Unified_to\Models\Operations\ListAccountingTaxratesRequest::class, $request, null));
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = $this->sdkConfiguration->userAgent;
        
        $client = Utils\Utils::configureSecurityClient($this->sdkConfiguration->defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $statusCode = $httpResponse->getStatusCode();

        $response = new \Unified\Unified_to\Models\Operations\ListAccountingTaxratesResponse();
        $response->statusCode = $statusCode;
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->accountingTaxrates = $serializer->deserialize((string)$httpResponse->getBody(), 'array<Unified\Unified_to\Models\Shared\AccountingTaxrate>', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Update a taxrate
     * 
     * @param \Unified\Unified_to\Models\Operations\PatchAccountingTaxrateRequest $request
     * @param \Unified\Unified_to\Models\Operations\PatchAccountingTaxrateSecurity $security
     * @return \Unified\Unified_to\Models\Operations\PatchAccountingTaxrateResponse
     */
	public function patchAccountingTaxrate(
        ?\Unified\Unified_to\Models\Operations\PatchAccountingTaxrateRequest $request,
        \Unified\Unified_to\Models\Operations\PatchAccountingTaxrateSecurity $security,
    ): \Unified\Unified_to\Models\Operations\PatchAccountingTaxrateResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/accounting/{connection_id}/taxrate/{id}', \Unified\Unified_to\Models\Operations\PatchAccountingTaxrateRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "accountingTaxrate", "json");
        if ($body !== null) {
            $options = array_merge_recursive($options, $body);
        }
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = $this->sdkConfiguration->userAgent;
        
        $client = Utils\Utils::configureSecurityClient($this->sdkConfiguration->defaultClient, $security);
        $httpResponse = $client->request('PATCH', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $statusCode = $httpResponse->getStatusCode();

        $response = new \Unified\Unified_to\Models\Operations\PatchAccountingTaxrateResponse();
        $response->statusCode = $statusCode;
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->accountingTaxrate = $serializer->deserialize((string)$httpResponse->getBody(), 'Unified\Unified_to\Models\Shared\AccountingTaxrate', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Remove a taxrate
     * 
     * @param \Unified\Unified_to\Models\Operations\RemoveAccountingTaxrateRequest $request
     * @param \Unified\Unified_to\Models\Operations\RemoveAccountingTaxrateSecurity $security
     * @return \Unified\Unified_to\Models\Operations\RemoveAccountingTaxrateResponse
     */
	public function removeAccountingTaxrate(
        ?\Unified\Unified_to\Models\Operations\RemoveAccountingTaxrateRequest $request,
        \Unified\Unified_to\Models\Operations\RemoveAccountingTaxrateSecurity $security,
    ): \Unified\Unified_to\Models\Operations\RemoveAccountingTaxrateResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/accounting/{connection_id}/taxrate/{id}', \Unified\Unified_to\Models\Operations\RemoveAccountingTaxrateRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = $this->sdkConfiguration->userAgent;
        
        $client = Utils\Utils::configureSecurityClient($this->sdkConfiguration->defaultClient, $security);
        $httpResponse = $client->request('DELETE', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $statusCode = $httpResponse->getStatusCode();

        $response = new \Unified\Unified_to\Models\Operations\RemoveAccountingTaxrateResponse();
        $response->statusCode = $statusCode;
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if (true) { /** @phpstan-ignore-line */
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $response->res = $httpResponse->getBody()->getContents();
            }
        }

        return $response;
    }
	
    /**
     * Update a taxrate
     * 
     * @param \Unified\Unified_to\Models\Operations\UpdateAccountingTaxrateRequest $request
     * @param \Unified\Unified_to\Models\Operations\UpdateAccountingTaxrateSecurity $security
     * @return \Unified\Unified_to\Models\Operations\UpdateAccountingTaxrateResponse
     */
	public function updateAccountingTaxrate(
        ?\Unified\Unified_to\Models\Operations\UpdateAccountingTaxrateRequest $request,
        \Unified\Unified_to\Models\Operations\UpdateAccountingTaxrateSecurity $security,
    ): \Unified\Unified_to\Models\Operations\UpdateAccountingTaxrateResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/accounting/{connection_id}/taxrate/{id}', \Unified\Unified_to\Models\Operations\UpdateAccountingTaxrateRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "accountingTaxrate", "json");
        if ($body !== null) {
            $options = array_merge_recursive($options, $body);
        }
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = $this->sdkConfiguration->userAgent;
        
        $client = Utils\Utils::configureSecurityClient($this->sdkConfiguration->defaultClient, $security);
        $httpResponse = $client->request('PUT', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $statusCode = $httpResponse->getStatusCode();

        $response = new \Unified\Unified_to\Models\Operations\UpdateAccountingTaxrateResponse();
        $response->statusCode = $statusCode;
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->accountingTaxrate = $serializer->deserialize((string)$httpResponse->getBody(), 'Unified\Unified_to\Models\Shared\AccountingTaxrate', 'json');
            }
        }

        return $response;
    }
}