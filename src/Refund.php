<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Unified\Unified_to;

class Refund 
{

	private SDKConfiguration $sdkConfiguration;

	/**
	 * @param SDKConfiguration $sdkConfig
	 */
	public function __construct(SDKConfiguration $sdkConfig)
	{
		$this->sdkConfiguration = $sdkConfig;
	}
	
    /**
     * Retrieve a refund
     * 
     * @param \Unified\Unified_to\Models\Operations\GetAccountingRefundRequest $request
     * @param \Unified\Unified_to\Models\Operations\GetAccountingRefundSecurity $security
     * @return \Unified\Unified_to\Models\Operations\GetAccountingRefundResponse
     */
	public function getAccountingRefund(
        ?\Unified\Unified_to\Models\Operations\GetAccountingRefundRequest $request,
        \Unified\Unified_to\Models\Operations\GetAccountingRefundSecurity $security,
    ): \Unified\Unified_to\Models\Operations\GetAccountingRefundResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/accounting/{connection_id}/refund/{id}', \Unified\Unified_to\Models\Operations\GetAccountingRefundRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\Unified\Unified_to\Models\Operations\GetAccountingRefundRequest::class, $request, null));
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = $this->sdkConfiguration->userAgent;
        
        $client = Utils\Utils::configureSecurityClient($this->sdkConfiguration->defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $statusCode = $httpResponse->getStatusCode();

        $response = new \Unified\Unified_to\Models\Operations\GetAccountingRefundResponse();
        $response->statusCode = $statusCode;
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->accountingRefund = $serializer->deserialize((string)$httpResponse->getBody(), 'Unified\Unified_to\Models\Shared\AccountingRefund', 'json');
            }
        }

        return $response;
    }
	
    /**
     * List all refunds
     * 
     * @param \Unified\Unified_to\Models\Operations\ListAccountingRefundsRequest $request
     * @param \Unified\Unified_to\Models\Operations\ListAccountingRefundsSecurity $security
     * @return \Unified\Unified_to\Models\Operations\ListAccountingRefundsResponse
     */
	public function listAccountingRefunds(
        ?\Unified\Unified_to\Models\Operations\ListAccountingRefundsRequest $request,
        \Unified\Unified_to\Models\Operations\ListAccountingRefundsSecurity $security,
    ): \Unified\Unified_to\Models\Operations\ListAccountingRefundsResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/accounting/{connection_id}/refund', \Unified\Unified_to\Models\Operations\ListAccountingRefundsRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\Unified\Unified_to\Models\Operations\ListAccountingRefundsRequest::class, $request, null));
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = $this->sdkConfiguration->userAgent;
        
        $client = Utils\Utils::configureSecurityClient($this->sdkConfiguration->defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $statusCode = $httpResponse->getStatusCode();

        $response = new \Unified\Unified_to\Models\Operations\ListAccountingRefundsResponse();
        $response->statusCode = $statusCode;
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->accountingRefunds = $serializer->deserialize((string)$httpResponse->getBody(), 'array<Unified\Unified_to\Models\Shared\AccountingRefund>', 'json');
            }
        }

        return $response;
    }
}