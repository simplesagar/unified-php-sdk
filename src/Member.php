<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Unified\Unified_to;

class Member 
{

	private SDKConfiguration $sdkConfiguration;

	/**
	 * @param SDKConfiguration $sdkConfig
	 */
	public function __construct(SDKConfiguration $sdkConfig)
	{
		$this->sdkConfiguration = $sdkConfig;
	}
	
    /**
     * Create a member
     * 
     * @param \Unified\Unified_to\Models\Operations\CreateMartechMemberRequest $request
     * @param \Unified\Unified_to\Models\Operations\CreateMartechMemberSecurity $security
     * @return \Unified\Unified_to\Models\Operations\CreateMartechMemberResponse
     */
	public function createMartechMember(
        ?\Unified\Unified_to\Models\Operations\CreateMartechMemberRequest $request,
        \Unified\Unified_to\Models\Operations\CreateMartechMemberSecurity $security,
    ): \Unified\Unified_to\Models\Operations\CreateMartechMemberResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/martech/{connection_id}/member', \Unified\Unified_to\Models\Operations\CreateMartechMemberRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "marketingMember", "json");
        if ($body !== null) {
            $options = array_merge_recursive($options, $body);
        }
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = $this->sdkConfiguration->userAgent;
        
        $client = Utils\Utils::configureSecurityClient($this->sdkConfiguration->defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $statusCode = $httpResponse->getStatusCode();

        $response = new \Unified\Unified_to\Models\Operations\CreateMartechMemberResponse();
        $response->statusCode = $statusCode;
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->marketingMember = $serializer->deserialize((string)$httpResponse->getBody(), 'Unified\Unified_to\Models\Shared\MarketingMember', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Retrieve a member
     * 
     * @param \Unified\Unified_to\Models\Operations\GetMartechMemberRequest $request
     * @param \Unified\Unified_to\Models\Operations\GetMartechMemberSecurity $security
     * @return \Unified\Unified_to\Models\Operations\GetMartechMemberResponse
     */
	public function getMartechMember(
        ?\Unified\Unified_to\Models\Operations\GetMartechMemberRequest $request,
        \Unified\Unified_to\Models\Operations\GetMartechMemberSecurity $security,
    ): \Unified\Unified_to\Models\Operations\GetMartechMemberResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/martech/{connection_id}/member/{id}', \Unified\Unified_to\Models\Operations\GetMartechMemberRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\Unified\Unified_to\Models\Operations\GetMartechMemberRequest::class, $request, null));
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = $this->sdkConfiguration->userAgent;
        
        $client = Utils\Utils::configureSecurityClient($this->sdkConfiguration->defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $statusCode = $httpResponse->getStatusCode();

        $response = new \Unified\Unified_to\Models\Operations\GetMartechMemberResponse();
        $response->statusCode = $statusCode;
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->marketingMember = $serializer->deserialize((string)$httpResponse->getBody(), 'Unified\Unified_to\Models\Shared\MarketingMember', 'json');
            }
        }

        return $response;
    }
	
    /**
     * List all members
     * 
     * @param \Unified\Unified_to\Models\Operations\ListMartechMembersRequest $request
     * @param \Unified\Unified_to\Models\Operations\ListMartechMembersSecurity $security
     * @return \Unified\Unified_to\Models\Operations\ListMartechMembersResponse
     */
	public function listMartechMembers(
        ?\Unified\Unified_to\Models\Operations\ListMartechMembersRequest $request,
        \Unified\Unified_to\Models\Operations\ListMartechMembersSecurity $security,
    ): \Unified\Unified_to\Models\Operations\ListMartechMembersResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/martech/{connection_id}/member', \Unified\Unified_to\Models\Operations\ListMartechMembersRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\Unified\Unified_to\Models\Operations\ListMartechMembersRequest::class, $request, null));
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = $this->sdkConfiguration->userAgent;
        
        $client = Utils\Utils::configureSecurityClient($this->sdkConfiguration->defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $statusCode = $httpResponse->getStatusCode();

        $response = new \Unified\Unified_to\Models\Operations\ListMartechMembersResponse();
        $response->statusCode = $statusCode;
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->marketingMembers = $serializer->deserialize((string)$httpResponse->getBody(), 'array<Unified\Unified_to\Models\Shared\MarketingMember>', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Update a member
     * 
     * @param \Unified\Unified_to\Models\Operations\PatchMartechMemberRequest $request
     * @param \Unified\Unified_to\Models\Operations\PatchMartechMemberSecurity $security
     * @return \Unified\Unified_to\Models\Operations\PatchMartechMemberResponse
     */
	public function patchMartechMember(
        ?\Unified\Unified_to\Models\Operations\PatchMartechMemberRequest $request,
        \Unified\Unified_to\Models\Operations\PatchMartechMemberSecurity $security,
    ): \Unified\Unified_to\Models\Operations\PatchMartechMemberResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/martech/{connection_id}/member/{id}', \Unified\Unified_to\Models\Operations\PatchMartechMemberRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "marketingMember", "json");
        if ($body !== null) {
            $options = array_merge_recursive($options, $body);
        }
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = $this->sdkConfiguration->userAgent;
        
        $client = Utils\Utils::configureSecurityClient($this->sdkConfiguration->defaultClient, $security);
        $httpResponse = $client->request('PATCH', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $statusCode = $httpResponse->getStatusCode();

        $response = new \Unified\Unified_to\Models\Operations\PatchMartechMemberResponse();
        $response->statusCode = $statusCode;
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->marketingMember = $serializer->deserialize((string)$httpResponse->getBody(), 'Unified\Unified_to\Models\Shared\MarketingMember', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Remove member
     * 
     * @param \Unified\Unified_to\Models\Operations\RemoveMartechMemberRequest $request
     * @param \Unified\Unified_to\Models\Operations\RemoveMartechMemberSecurity $security
     * @return \Unified\Unified_to\Models\Operations\RemoveMartechMemberResponse
     */
	public function removeMartechMember(
        ?\Unified\Unified_to\Models\Operations\RemoveMartechMemberRequest $request,
        \Unified\Unified_to\Models\Operations\RemoveMartechMemberSecurity $security,
    ): \Unified\Unified_to\Models\Operations\RemoveMartechMemberResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/martech/{connection_id}/member/{id}', \Unified\Unified_to\Models\Operations\RemoveMartechMemberRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = $this->sdkConfiguration->userAgent;
        
        $client = Utils\Utils::configureSecurityClient($this->sdkConfiguration->defaultClient, $security);
        $httpResponse = $client->request('DELETE', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $statusCode = $httpResponse->getStatusCode();

        $response = new \Unified\Unified_to\Models\Operations\RemoveMartechMemberResponse();
        $response->statusCode = $statusCode;
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if (true) { /** @phpstan-ignore-line */
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $response->res = $httpResponse->getBody()->getContents();
            }
        }

        return $response;
    }
	
    /**
     * Update a member
     * 
     * @param \Unified\Unified_to\Models\Operations\UpdateMartechMemberRequest $request
     * @param \Unified\Unified_to\Models\Operations\UpdateMartechMemberSecurity $security
     * @return \Unified\Unified_to\Models\Operations\UpdateMartechMemberResponse
     */
	public function updateMartechMember(
        ?\Unified\Unified_to\Models\Operations\UpdateMartechMemberRequest $request,
        \Unified\Unified_to\Models\Operations\UpdateMartechMemberSecurity $security,
    ): \Unified\Unified_to\Models\Operations\UpdateMartechMemberResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/martech/{connection_id}/member/{id}', \Unified\Unified_to\Models\Operations\UpdateMartechMemberRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "marketingMember", "json");
        if ($body !== null) {
            $options = array_merge_recursive($options, $body);
        }
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = $this->sdkConfiguration->userAgent;
        
        $client = Utils\Utils::configureSecurityClient($this->sdkConfiguration->defaultClient, $security);
        $httpResponse = $client->request('PUT', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $statusCode = $httpResponse->getStatusCode();

        $response = new \Unified\Unified_to\Models\Operations\UpdateMartechMemberResponse();
        $response->statusCode = $statusCode;
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->marketingMember = $serializer->deserialize((string)$httpResponse->getBody(), 'Unified\Unified_to\Models\Shared\MarketingMember', 'json');
            }
        }

        return $response;
    }
}