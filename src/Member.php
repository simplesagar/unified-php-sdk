<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Unified\Unified_to;

class Member 
{

	private SDKConfiguration $sdkConfiguration;

	/**
	 * @param SDKConfiguration $sdkConfig
	 */
	public function __construct(SDKConfiguration $sdkConfig)
	{
		$this->sdkConfiguration = $sdkConfig;
	}
	
    /**
     * Remove member from a list
     * 
     * @param \Unified\Unified_to\Models\Operations\DeleteMartechConnectionIdListIdMemberIdRequest $request
     * @return \Unified\Unified_to\Models\Operations\DeleteMartechConnectionIdListIdMemberIdResponse
     */
	public function deleteMartechConnectionIdListIdMemberId(
        ?\Unified\Unified_to\Models\Operations\DeleteMartechConnectionIdListIdMemberIdRequest $request,
    ): \Unified\Unified_to\Models\Operations\DeleteMartechConnectionIdListIdMemberIdResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/martech/{connection_id}/{list_id}/member/{id}', \Unified\Unified_to\Models\Operations\DeleteMartechConnectionIdListIdMemberIdRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = sprintf('speakeasy-sdk/%s %s %s %s', $this->sdkConfiguration->language, $this->sdkConfiguration->sdkVersion, $this->sdkConfiguration->genVersion, $this->sdkConfiguration->openapiDocVersion);
        
        $httpResponse = $this->sdkConfiguration->securityClient->request('DELETE', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \Unified\Unified_to\Models\Operations\DeleteMartechConnectionIdListIdMemberIdResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if (true) { /** @phpstan-ignore-line */
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $response->deleteMartechConnectionIdListIdMemberIdDefaultApplicationJSONString = $httpResponse->getBody()->getContents();
            }
        }

        return $response;
    }
	
    /**
     * List all members in a list
     * 
     * @param \Unified\Unified_to\Models\Operations\GetMartechConnectionIdListIdMemberRequest $request
     * @return \Unified\Unified_to\Models\Operations\GetMartechConnectionIdListIdMemberResponse
     */
	public function getMartechConnectionIdListIdMember(
        ?\Unified\Unified_to\Models\Operations\GetMartechConnectionIdListIdMemberRequest $request,
    ): \Unified\Unified_to\Models\Operations\GetMartechConnectionIdListIdMemberResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/martech/{connection_id}/{list_id}/member', \Unified\Unified_to\Models\Operations\GetMartechConnectionIdListIdMemberRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\Unified\Unified_to\Models\Operations\GetMartechConnectionIdListIdMemberRequest::class, $request, null));
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = sprintf('speakeasy-sdk/%s %s %s %s', $this->sdkConfiguration->language, $this->sdkConfiguration->sdkVersion, $this->sdkConfiguration->genVersion, $this->sdkConfiguration->openapiDocVersion);
        
        $httpResponse = $this->sdkConfiguration->securityClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \Unified\Unified_to\Models\Operations\GetMartechConnectionIdListIdMemberResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->marketingMembers = $serializer->deserialize((string)$httpResponse->getBody(), 'array<Unified\Unified_to\Models\Shared\MarketingMember>', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Retrieve a member from a list
     * 
     * @param \Unified\Unified_to\Models\Operations\GetMartechConnectionIdListIdMemberIdRequest $request
     * @return \Unified\Unified_to\Models\Operations\GetMartechConnectionIdListIdMemberIdResponse
     */
	public function getMartechConnectionIdListIdMemberId(
        ?\Unified\Unified_to\Models\Operations\GetMartechConnectionIdListIdMemberIdRequest $request,
    ): \Unified\Unified_to\Models\Operations\GetMartechConnectionIdListIdMemberIdResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/martech/{connection_id}/{list_id}/member/{id}', \Unified\Unified_to\Models\Operations\GetMartechConnectionIdListIdMemberIdRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = sprintf('speakeasy-sdk/%s %s %s %s', $this->sdkConfiguration->language, $this->sdkConfiguration->sdkVersion, $this->sdkConfiguration->genVersion, $this->sdkConfiguration->openapiDocVersion);
        
        $httpResponse = $this->sdkConfiguration->securityClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \Unified\Unified_to\Models\Operations\GetMartechConnectionIdListIdMemberIdResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->marketingMember = $serializer->deserialize((string)$httpResponse->getBody(), 'Unified\Unified_to\Models\Shared\MarketingMember', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Update a member in a list
     * 
     * @param \Unified\Unified_to\Models\Operations\PatchMartechConnectionIdListIdMemberIdRequest $request
     * @return \Unified\Unified_to\Models\Operations\PatchMartechConnectionIdListIdMemberIdResponse
     */
	public function patchMartechConnectionIdListIdMemberId(
        ?\Unified\Unified_to\Models\Operations\PatchMartechConnectionIdListIdMemberIdRequest $request,
    ): \Unified\Unified_to\Models\Operations\PatchMartechConnectionIdListIdMemberIdResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/martech/{connection_id}/{list_id}/member/{id}', \Unified\Unified_to\Models\Operations\PatchMartechConnectionIdListIdMemberIdRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "marketingMember", "json");
        if ($body !== null) {
            $options = array_merge_recursive($options, $body);
        }
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = sprintf('speakeasy-sdk/%s %s %s %s', $this->sdkConfiguration->language, $this->sdkConfiguration->sdkVersion, $this->sdkConfiguration->genVersion, $this->sdkConfiguration->openapiDocVersion);
        
        $httpResponse = $this->sdkConfiguration->securityClient->request('PATCH', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \Unified\Unified_to\Models\Operations\PatchMartechConnectionIdListIdMemberIdResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->marketingMember = $serializer->deserialize((string)$httpResponse->getBody(), 'Unified\Unified_to\Models\Shared\MarketingMember', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Create a member in a list
     * 
     * @param \Unified\Unified_to\Models\Operations\PostMartechConnectionIdListIdMemberRequest $request
     * @return \Unified\Unified_to\Models\Operations\PostMartechConnectionIdListIdMemberResponse
     */
	public function postMartechConnectionIdListIdMember(
        ?\Unified\Unified_to\Models\Operations\PostMartechConnectionIdListIdMemberRequest $request,
    ): \Unified\Unified_to\Models\Operations\PostMartechConnectionIdListIdMemberResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/martech/{connection_id}/{list_id}/member', \Unified\Unified_to\Models\Operations\PostMartechConnectionIdListIdMemberRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "marketingMember", "json");
        if ($body !== null) {
            $options = array_merge_recursive($options, $body);
        }
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = sprintf('speakeasy-sdk/%s %s %s %s', $this->sdkConfiguration->language, $this->sdkConfiguration->sdkVersion, $this->sdkConfiguration->genVersion, $this->sdkConfiguration->openapiDocVersion);
        
        $httpResponse = $this->sdkConfiguration->securityClient->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \Unified\Unified_to\Models\Operations\PostMartechConnectionIdListIdMemberResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->marketingMember = $serializer->deserialize((string)$httpResponse->getBody(), 'Unified\Unified_to\Models\Shared\MarketingMember', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Update a member in a list
     * 
     * @param \Unified\Unified_to\Models\Operations\PutMartechConnectionIdListIdMemberIdRequest $request
     * @return \Unified\Unified_to\Models\Operations\PutMartechConnectionIdListIdMemberIdResponse
     */
	public function putMartechConnectionIdListIdMemberId(
        ?\Unified\Unified_to\Models\Operations\PutMartechConnectionIdListIdMemberIdRequest $request,
    ): \Unified\Unified_to\Models\Operations\PutMartechConnectionIdListIdMemberIdResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/martech/{connection_id}/{list_id}/member/{id}', \Unified\Unified_to\Models\Operations\PutMartechConnectionIdListIdMemberIdRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "marketingMember", "json");
        if ($body !== null) {
            $options = array_merge_recursive($options, $body);
        }
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = sprintf('speakeasy-sdk/%s %s %s %s', $this->sdkConfiguration->language, $this->sdkConfiguration->sdkVersion, $this->sdkConfiguration->genVersion, $this->sdkConfiguration->openapiDocVersion);
        
        $httpResponse = $this->sdkConfiguration->securityClient->request('PUT', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \Unified\Unified_to\Models\Operations\PutMartechConnectionIdListIdMemberIdResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->marketingMember = $serializer->deserialize((string)$httpResponse->getBody(), 'Unified\Unified_to\Models\Shared\MarketingMember', 'json');
            }
        }

        return $response;
    }
}