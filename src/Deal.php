<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Unified\Unified_to;

class Deal 
{

	private SDKConfiguration $sdkConfiguration;

	/**
	 * @param SDKConfiguration $sdkConfig
	 */
	public function __construct(SDKConfiguration $sdkConfig)
	{
		$this->sdkConfiguration = $sdkConfig;
	}
	
    /**
     * Remove a deal
     * 
     * @param \Unified\Unified_to\Models\Operations\DeleteCrmConnectionIdDealIdRequest $request
     * @return \Unified\Unified_to\Models\Operations\DeleteCrmConnectionIdDealIdResponse
     */
	public function deleteCrmConnectionIdDealId(
        ?\Unified\Unified_to\Models\Operations\DeleteCrmConnectionIdDealIdRequest $request,
    ): \Unified\Unified_to\Models\Operations\DeleteCrmConnectionIdDealIdResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/crm/{connection_id}/deal/{id}', \Unified\Unified_to\Models\Operations\DeleteCrmConnectionIdDealIdRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = $this->sdkConfiguration->userAgent;
        
        $httpResponse = $this->sdkConfiguration->securityClient->request('DELETE', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \Unified\Unified_to\Models\Operations\DeleteCrmConnectionIdDealIdResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if (true) { /** @phpstan-ignore-line */
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $response->deleteCrmConnectionIdDealIdDefaultApplicationJSONString = $httpResponse->getBody()->getContents();
            }
        }

        return $response;
    }
	
    /**
     * List all deals
     * 
     * @param \Unified\Unified_to\Models\Operations\GetCrmConnectionIdDealRequest $request
     * @return \Unified\Unified_to\Models\Operations\GetCrmConnectionIdDealResponse
     */
	public function getCrmConnectionIdDeal(
        ?\Unified\Unified_to\Models\Operations\GetCrmConnectionIdDealRequest $request,
    ): \Unified\Unified_to\Models\Operations\GetCrmConnectionIdDealResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/crm/{connection_id}/deal', \Unified\Unified_to\Models\Operations\GetCrmConnectionIdDealRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\Unified\Unified_to\Models\Operations\GetCrmConnectionIdDealRequest::class, $request, null));
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = $this->sdkConfiguration->userAgent;
        
        $httpResponse = $this->sdkConfiguration->securityClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \Unified\Unified_to\Models\Operations\GetCrmConnectionIdDealResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->crmDeals = $serializer->deserialize((string)$httpResponse->getBody(), 'array<Unified\Unified_to\Models\Shared\CrmDeal>', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Retrieve a deal
     * 
     * @param \Unified\Unified_to\Models\Operations\GetCrmConnectionIdDealIdRequest $request
     * @return \Unified\Unified_to\Models\Operations\GetCrmConnectionIdDealIdResponse
     */
	public function getCrmConnectionIdDealId(
        ?\Unified\Unified_to\Models\Operations\GetCrmConnectionIdDealIdRequest $request,
    ): \Unified\Unified_to\Models\Operations\GetCrmConnectionIdDealIdResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/crm/{connection_id}/deal/{id}', \Unified\Unified_to\Models\Operations\GetCrmConnectionIdDealIdRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = $this->sdkConfiguration->userAgent;
        
        $httpResponse = $this->sdkConfiguration->securityClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \Unified\Unified_to\Models\Operations\GetCrmConnectionIdDealIdResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->crmDeal = $serializer->deserialize((string)$httpResponse->getBody(), 'Unified\Unified_to\Models\Shared\CrmDeal', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Update a deal
     * 
     * @param \Unified\Unified_to\Models\Operations\PatchCrmConnectionIdDealIdRequest $request
     * @return \Unified\Unified_to\Models\Operations\PatchCrmConnectionIdDealIdResponse
     */
	public function patchCrmConnectionIdDealId(
        ?\Unified\Unified_to\Models\Operations\PatchCrmConnectionIdDealIdRequest $request,
    ): \Unified\Unified_to\Models\Operations\PatchCrmConnectionIdDealIdResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/crm/{connection_id}/deal/{id}', \Unified\Unified_to\Models\Operations\PatchCrmConnectionIdDealIdRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "crmDeal", "json");
        if ($body !== null) {
            $options = array_merge_recursive($options, $body);
        }
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = $this->sdkConfiguration->userAgent;
        
        $httpResponse = $this->sdkConfiguration->securityClient->request('PATCH', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \Unified\Unified_to\Models\Operations\PatchCrmConnectionIdDealIdResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->crmDeal = $serializer->deserialize((string)$httpResponse->getBody(), 'Unified\Unified_to\Models\Shared\CrmDeal', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Create a deal
     * 
     * @param \Unified\Unified_to\Models\Operations\PostCrmConnectionIdDealRequest $request
     * @return \Unified\Unified_to\Models\Operations\PostCrmConnectionIdDealResponse
     */
	public function postCrmConnectionIdDeal(
        ?\Unified\Unified_to\Models\Operations\PostCrmConnectionIdDealRequest $request,
    ): \Unified\Unified_to\Models\Operations\PostCrmConnectionIdDealResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/crm/{connection_id}/deal', \Unified\Unified_to\Models\Operations\PostCrmConnectionIdDealRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "crmDeal", "json");
        if ($body !== null) {
            $options = array_merge_recursive($options, $body);
        }
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = $this->sdkConfiguration->userAgent;
        
        $httpResponse = $this->sdkConfiguration->securityClient->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \Unified\Unified_to\Models\Operations\PostCrmConnectionIdDealResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->crmDeal = $serializer->deserialize((string)$httpResponse->getBody(), 'Unified\Unified_to\Models\Shared\CrmDeal', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Update a deal
     * 
     * @param \Unified\Unified_to\Models\Operations\PutCrmConnectionIdDealIdRequest $request
     * @return \Unified\Unified_to\Models\Operations\PutCrmConnectionIdDealIdResponse
     */
	public function putCrmConnectionIdDealId(
        ?\Unified\Unified_to\Models\Operations\PutCrmConnectionIdDealIdRequest $request,
    ): \Unified\Unified_to\Models\Operations\PutCrmConnectionIdDealIdResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/crm/{connection_id}/deal/{id}', \Unified\Unified_to\Models\Operations\PutCrmConnectionIdDealIdRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "crmDeal", "json");
        if ($body !== null) {
            $options = array_merge_recursive($options, $body);
        }
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = $this->sdkConfiguration->userAgent;
        
        $httpResponse = $this->sdkConfiguration->securityClient->request('PUT', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \Unified\Unified_to\Models\Operations\PutCrmConnectionIdDealIdResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->crmDeal = $serializer->deserialize((string)$httpResponse->getBody(), 'Unified\Unified_to\Models\Shared\CrmDeal', 'json');
            }
        }

        return $response;
    }
}